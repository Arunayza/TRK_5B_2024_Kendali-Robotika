import time
from coppeliasim_zmqremoteapi_client import RemoteAPIClient

# Connect to the CoppeliaSim client
client = RemoteAPIClient()
sim = client.require('sim')

# Get handles for the motors
left_motor = sim.getObject('/PioneerP3DX/leftMotor')
right_motor = sim.getObject('/PioneerP3DX/rightMotor')

# Function to set the speed of the motors
def set_motor_speed(left_speed, right_speed):
    sim.setJointTargetVelocity(left_motor, left_speed)
    sim.setJointTargetVelocity(right_motor, right_speed)

# Enable stepping mode
sim.setStepping(True)

# Start the simulation
sim.startSimulation()

# 1
for _ in range(200):
    set_motor_speed(-2, -2)
    sim.step()  # Step the simulation

# 1
for _ in range(40):
    set_motor_speed(1, -2)
    sim.step()  # Step the simulation

# 2
for _ in range(190):
    set_motor_speed(-2, -2)
    sim.step()  # Step the simulation

# 2
for _ in range(40):
    set_motor_speed(1, -2)
    sim.step()  # Step the simulation

# 3
for _ in range(185):
    set_motor_speed(-2, -2)
    sim.step()  # Step the simulation

# 3
for _ in range(40):
    set_motor_speed(1, -1.9)
    sim.step()  # Step the simulation

# 4
for _ in range(200):
    set_motor_speed(-2, -2)
    sim.step()  # Step the simulation

# 4
for _ in range(40):
    set_motor_speed(2, -2)
    sim.step()  # Step the simulation

# 4
for _ in range(40):
    set_motor_speed(0, -0.68)
    sim.step()  # Step the simulation

# 5
for _ in range(285):
    set_motor_speed(-2, -2)
    sim.step()  # Step the simulation

# 5
for _ in range(40):
    set_motor_speed(2, -2)
    sim.step()  # Step the simulation

# 5
for _ in range(40):
    set_motor_speed(0, -0.65)
    sim.step()  # Step the simulation

# 5
for _ in range(200):
    set_motor_speed(-2, -2)
    sim.step()  # Step the simulation

# 5
for _ in range(40):
    set_motor_speed(2, -2)
    sim.step()  # Step the simulation

# 5
for _ in range(40):
    set_motor_speed(0, -0.65)
    sim.step()  # Step the simulation

# 7
for _ in range(280):
    set_motor_speed(-2, -2)
    sim.step()  # Step the simulation

# 7
for _ in range(40):
    set_motor_speed(-2, 2)
    sim.step()  # Step the simulation

# 7
for _ in range(40):
    set_motor_speed(-0.75, 0)
    sim.step()  # Step the simulation

# 8
for _ in range(200):
    set_motor_speed(-2, -2)
    sim.step()  # Step the simulation

# rotate
for _ in range(65):
    set_motor_speed(2, -2)
    sim.step()

sim.stopSimulation()
